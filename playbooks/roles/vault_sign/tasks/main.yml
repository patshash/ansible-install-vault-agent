---

# roles/vault_sign/tasks/main.yml
- name: Install Python dependencies in EE
  ansible.builtin.pip:
    name: hvac==2.3.0
    executable: /usr/bin/pip3

- name: Create temporary directory for PKI CA storage
  ansible.builtin.file:
    path: /tmp/ssh_ca.PKI/
    state: directory
    mode: '0755'

- name: Download PKI CA certificate
  ansible.builtin.get_url:
    url: https://production.vault.11eb56d6-0f95-3a99-a33c-0242ac110007.aws.hashicorp.cloud:8200/v1/pki/ca/pem
    headers:
      X-Vault-Namespace: admin/tfo-apj-demos
    dest: /tmp/ssh_ca.PKI/hcp-vault-ca.crt
    mode: "0644"

- name: Copy CA public certificates to ca-trust
  ansible.builtin.assemble:
    src: /tmp/ssh_ca.PKI/
    dest: /etc/pki/ca-trust/source/anchors/trusted-user-ca-keys.pem
    mode: "0644"

- name: Register HCP Vault CA
  ansible.builtin.command: update-ca-trust extract

# Authenticate to Vault and Sign CSR (via Execution Environment)
- name: Authenticate to Vault and Sign CSR
  community.hashi_vault.vault_write:
    url: "{{ vault_addr }}"
    path: "pki/sign/{{ vault_pki_role }}"
    data:
      csr: "{{ remote_csr_data.content | b64decode }}"
      common_name: "{{ inventory_hostname }}.{{ domain }}"
      ttl: "720h"
    auth_method: approle
    role_id: "{{ vault_approle_role_id }}"
    secret_id: "{{ vault_approle_secret_id }}"
    validate_certs: false
  register: signed_cert

# Write signed certificate to the VM
- name: Write signed certificate to file
  ansible.builtin.copy:
    content: "{{ signed_cert.data.certificate }}"
    dest: "/etc/vault.d/cert.pem"
    mode: "0644"